#+TITLE: fractal-mpi

#+STYLE: <link rel="stylesheet" href="css/screen.css" type="text/css" media="screen, projection" />
#+STYLE: <link rel="stylesheet" href="css/print.css" type="text/css" media="print" />

* Introduction
This program renders Julia sets of the function f(z) = z^2 + c, coloring
interior points by their proximity to the set and exterior points by their
divergence rate.

The program reads image and fractal parameters from an input file (see the
examples directory), and any of these can be overriden with a command-line
argument.


* Usage
If this is your input file
#+BEGIN_SRC athena
<fractal>
Cx = -0.8
Cy =  0.156

Lx       = 1.1  	      # physical size
center_x = 0.55		      # center
center_y = 0.05

<image>
Nx       =  480
Ny	 =  300

# coloring for interior points
tolerance = 50.0              # what counts as inside?
exp       = 4.0               # exponent
base      = 0.1               # min color

# coloring for exterior points
nstripes = 3
s1 = 10.0
s2 =  5.0
s3 =  3.0
color_1	  = DarkChocolate
color_2	  = Red # Indigo
color_3	  = MidnightBlue

# output file
file      = demj.ppm

<par_end>
#+END_SRC

You can run the program as
#+BEGIN_EXAMPLE
./fractal_mpi.x -i input.frac
#+END_EXAMPLE
or, if you want to override certain options
#+BEGIN_EXAMPLE
./fractal_mpi.x -i input.frac fractal/Lx=2 image/tolerance=100
#+END_EXAMPLE


* Examples
  #+ATTR_HTML: alt="julia 1" title="Julia Set" width="275" class="pad top left"
  [[file:example.png]]
  #+ATTR_HTML: alt="julia 2" title="Julia Set" width="275" class="pad top"
  [[file:example2.png]]
  #+ATTR_HTML: alt="julia 3" title="Julia Set" width="275" class="pad bottom left"
  [[file:example3.png]]

